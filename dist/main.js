!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/home/xoxefdp/WORKSPACE/PROJECTS/NPM_LIBS/the-type-validator/dist",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);const o=t=>null===t&&"[object Null]"===toString.call(t),n=t=>"number"==typeof t&&!isNaN(t)&&t===Number(t)&&(t=>Number.isSafeInteger(t)&&t<Number.MAX_VALUE&&t>Number.MIN_VALUE)(t),i=t=>Array.isArray(t)&&"[object Array]"===toString.call(t),c=t=>i(t)&&0===t.length,l=t=>"object"==typeof t&&"[object Object]"===toString.call(t),u=t=>{let e=null;if(l(t)){for(const r in t)t.hasOwnProperty(r)&&(e=!1);e=!0}return e};exports.isNull=o,exports.isUndefined=t=>void 0===t&&"[object Undefined]"===toString.call(t),exports.isFunction=t=>"function"==typeof t&&"[object Function]"===toString.call(t),exports.isString=t=>"string"==typeof t&&"[object String]"===toString.call(t),exports.isNumber=n,exports.isInteger=t=>n(t)&&Number.isInteger(t),exports.isFloat=t=>n(t)&&t%1!=0,exports.isArray=i,exports.isEmptyArray=c,exports.isObject=l,exports.isPlainObject=t=>{if(!l(t))return!1;const e=Object.getPrototypeOf(t);return!o(e)&&null===Object.getPrototypeOf(e)},exports.isEmptyObject=u,exports.isPromise=t=>!(!t||"function"!=typeof t.then||"function"!=typeof t.catch||"function"!=typeof t.finally),exports.isEmpty=t=>c(t)||u(t),exports.getType=t=>toString.call(t).replace("[object ","").replace("]","")}]);